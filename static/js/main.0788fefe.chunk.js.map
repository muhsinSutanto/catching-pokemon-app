{"version":3,"sources":["assets/images/pokemon-logo.png","template/Navbar.js","template/Layout.js","consts/actionType.js","consts/env.js","store/actions/pokemonAction.js","helpers/utils.js","pages/Home.js","pages/MyPokemon.js","assets/images/pokemon-gif.gif","assets/images/pokemon-ball.png","assets/images/pokemon-ball-emphty.png","pages/PokemonDetail.js","routes/index.js","App.js","store/reducers/pokemonReducer.js","store/index.js","index.js"],"names":["Header","Layout","Navbar","location","useLocation","style","display","className","src","logo","theme","mode","selectedKeys","pathname","Item","to","props","Fragment","children","TYPES","ENV","setToCage","data","dispatch","local","localStorage","getItem","newData","JSON","parse","concat","setItem","stringify","type","payload","imageUrl","pokemon","split","url","id","length","Home","Text","Typography","Title","useDispatch","pokemonList","useSelector","state","useEffect","axios","get","then","res","catch","err","console","log","align","level","span","map","key","name","hoverable","xs","lg","backgroundColor","size","paragraph","rows","MyPokemon","myPokemons","finalData","handleRelease","param","removeData","filter","datum","removePokemon","image","newName","onClick","PokemonDetail","history","useHistory","useState","modalVideo","setModalVideo","modalName","setModalName","huntStatus","setHuntStatus","newPoke","setNewPoke","emptPoke","setEmptPoke","pokemonDetail","match","useRouteMatch","params","handleSetToCage","a","push","justify","flexFlow","marginTop","setTimeout","Math","random","types","moves","move","closable","onCancel","footer","visible","catchGif","pokeBallEmp","pokeBall","color","value","onChange","e","target","ROUTES","path","exact","component","App","routePages","initialState","middleware","thunk","store","createStore","action","results","sprites","front_default","compose","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0788fefe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokemon-logo.e61842b2.png\";","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport logo from \"../assets/images/pokemon-logo.png\";\n\nconst { Header } = Layout;\n\nconst Navbar = () => {\n  let location = useLocation();\n\n  return (\n    <Header style={{ display: \"flex\" }}>\n      <div className=\"logo\">\n        <img src={logo} />\n      </div>\n      <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        selectedKeys={location.pathname === \"/my-pokemon\" ? [\"2\"] : [\"1\"]}\n      >\n        <Menu.Item key=\"1\">\n          Pokemon Bank <Link to=\"/\" />\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          My Pokemon <Link to=\"/my-pokemon\" />\n        </Menu.Item>\n      </Menu>\n    </Header>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport Navbar from './Navbar'\n\nconst Layout = (props) => {\n    return (<React.Fragment>\n        <Navbar />\n        {props.children}\n    </React.Fragment>);\n}\n\nexport default Layout;","const TYPES = {\n    GET_POKEMON_LIST    : 'get_pokemon_list',\n    GET_POKEMON_DETAIL  : 'get_pokemon_detail',\n    GET_MY_POKEMON_LIST : 'get_my_pokemon_list',\n    REMOVE_POKEMON      : 'remove_pokemon'\n}\n\nexport{\n    TYPES\n}","const ENV = {\n    BASE_URL: 'https://pokeapi.co/api/v2/',\n    IMAGE_URL: 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/'\n}\n\nexport {\n    ENV\n}","import axios from 'axios'\nimport { TYPES } from '../../consts/actionType'\nimport { ENV } from '../../consts/env'\n\nconst fetchPokemonList = () => (dispatch) => {\n    axios.get(`${ENV.BASE_URL}pokemon`)\n        .then((res) => {\n            dispatch({\n                type: TYPES.GET_POKEMON_LIST,\n                payload: res.data\n            })\n        })\n        .catch(err => console.log('err', err))\n}\n\nconst fetPokemonDetail = (id) => (dispatch) => {\n    axios.get(`${ENV.BASE_URL}pokemon/${id}`)\n        .then((res) =>{\n            dispatch({\n                type: TYPES.GET_POKEMON_DETAIL,\n                payload: res.data\n            })\n        })\n        .catch(err => console.log(err)) \n}\n\nconst setToCage = (data) => (dispatch) => {\n    let local = localStorage.getItem(\"test\");\n    let exisData = local === null ? [] : JSON.parse(local);\n    let newData = exisData.concat(data);\n    localStorage.setItem(\"test\", JSON.stringify(newData));\n\n    dispatch({\n        type: TYPES.GET_MY_POKEMON_LIST,\n        payload: newData\n    })\n}\n\nconst fetchMyPokemon = () => (dispatch) => {\n    const data = localStorage.getItem(\"test\")\n    const finalData = data === null? [] : JSON.parse(data)\n    dispatch({\n        type: TYPES.GET_MY_POKEMON_LIST,\n        payload: finalData\n    })\n}\n\nconst removePokemon = (param) => (dispatch) => {\n    const data = localStorage.getItem('test')\n    const pars = JSON.parse(data)\n    const removeData = pars.filter((datum, key) => (\n        key !== param\n    ))\n\n    localStorage.setItem(\"test\", JSON.stringify(removeData));\n    dispatch({\n        type: TYPES.GET_MY_POKEMON_LIST,\n        payload: removeData\n    })\n}\n\n\nexport {\n    fetchPokemonList,\n    fetPokemonDetail,\n    setToCage,\n    fetchMyPokemon,\n    removePokemon\n}","import {ENV} from '../consts/env'\n\nexport const imageUrl = (pokemon) => {\n    \n    let split = pokemon.url.split(\"/\");\n    let id = split[split.length - 2];\n    let img = `${ENV.IMAGE_URL}${id}.png`;\n\n    return img\n}","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Card,\n  Col,\n  Row,\n  Skeleton,\n  Typography,\n  Avatar,\n} from \"antd\";\nimport Layout from \"../template/Layout\";\nimport { fetchPokemonList } from \"../store/actions/pokemonAction\";\nimport { imageUrl } from \"../helpers/utils\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  const { Text, Title } = Typography;\n  const dispatch = useDispatch();\n  const pokemonList = useSelector((state) => state.pokemonList);\n\n  useEffect(() => {\n    dispatch(fetchPokemonList());\n  }, []);\n\n  return (\n    <Layout>\n      <Row align='middle'>\n        <Col>\n          <Title className='pd-20' level={2}>Pokemon List</Title>\n        </Col>\n      </Row>\n      {!pokemonList.length ? (\n        <Skeleton paragraph={{ rows: 10 }} />\n      ) : (\n        <Col span={24}>\n          {pokemonList.map((pokemon, key) => {\n            return (\n              <Link to={`/pokemon/${pokemon.name}`}>\n                <Card key={key} hoverable=\"true\">\n                  <Row align=\"middle\">\n                    <Col xs={{ span: 5 }} lg={{ span: 1 }}>\n                      <Avatar\n                        style={{ backgroundColor: \"#fde3cf\" }}\n                        size={50}\n                        src={imageUrl(pokemon)}\n                      />\n                    </Col>\n                    <Col>\n                      <Text>{pokemon.name}</Text>\n                    </Col>\n                  </Row>\n                </Card>\n              </Link>\n            );\n          })}\n        </Col>\n      )}\n    </Layout>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from \"react\";\nimport Layout from \"../template/Layout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchMyPokemon, removePokemon } from \"../store/actions/pokemonAction\";\nimport { Button, Card, Col, Row, Skeleton, Typography, Avatar } from \"antd\";\n\nconst MyPokemon = () => {\n  const { Text, Title } = Typography;\n\n  const dispatch = useDispatch();\n  const myPokemons = useSelector((state) => state.myPokemons);\n\n  useEffect(() => {\n    dispatch(fetchMyPokemon());\n  }, []);\n\n  const handleRelease = (param) => {\n    dispatch(removePokemon(param));\n  };\n\n  const render = () => {\n    if (myPokemons == null) {\n      return <Skeleton paragraph={{ rows: 10 }} />;\n    }\n    if (!myPokemons.length) {\n      return (\n        <Title level={2} className=\"pd-20\">\n          Sorry...... You haven't caught any pokemon\n        </Title>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Title className=\"pd-20\" level={2}>\n            My Pokemons' Cage\n          </Title>\n          {myPokemons.map((pokemon, key) => (\n            <Card key={key}>\n              <Row align=\"middle\">\n                <Col xs={{ span: 5 }} lg={{ span: 1 }}>\n                  <Avatar\n                    style={{ backgroundColor: \"#fde3cf\" }}\n                    size={50}\n                    src={pokemon.image}\n                  />\n                </Col>\n                <Col xs={{ span: 5 }} lg={{ span: 1 }}>\n                  <Text>{pokemon.newName}</Text>\n                </Col>\n                <Col>\n                  <Button type='primary' onClick={() => handleRelease(key)}>Release</Button>\n                </Col>\n              </Row>\n            </Card>\n          ))}\n        </React.Fragment>\n      );\n    }\n  };\n\n  return <Layout>{render()}</Layout>;\n};\n\nexport default MyPokemon;\n","export default __webpack_public_path__ + \"static/media/pokemon-gif.65a3487b.gif\";","export default __webpack_public_path__ + \"static/media/pokemon-ball.493785ff.png\";","export default __webpack_public_path__ + \"static/media/pokemon-ball-emphty.66fb7357.png\";","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setToCage, fetPokemonDetail } from \"../store/actions/pokemonAction\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Typography,\n  Image,\n  Button,\n  Modal,\n  Input,\n  Avatar,\n} from \"antd\";\nimport Layout from \"../template/Layout\";\nimport catchGif from \"../assets/images/pokemon-gif.gif\";\nimport pokeBall from \"../assets/images/pokemon-ball.png\";\nimport pokeBallEmp from \"../assets/images/pokemon-ball-emphty.png\";\n\nconst PokemonDetail = (props) => {\n  const { Text, Title } = Typography;\n  let history = useHistory();\n\n  const [modalVideo, setModalVideo] = useState(false);\n  const [modalName, setModalName] = useState(false);\n  const [huntStatus, setHuntStatus] = useState(\"\");\n  const [newPoke, setNewPoke] = useState(\"\");\n  const [emptPoke, setEmptPoke] = useState(\"\")\n\n  const dispatch = useDispatch();\n  const pokemonDetail = useSelector((state) => state.pokemonDetail);\n  const match = useRouteMatch();\n\n  useEffect(() => {\n    dispatch(fetPokemonDetail(match.params.id));\n  }, []);\n\n  const handleCatch = () => {\n    setModalVideo(true);\n    setTimeout(() => {\n      const result = Math.random() < 0.5;\n      if (result === false) {\n        setModalVideo(false);\n        setHuntStatus(\"failed\");\n      } else {\n        setModalVideo(false);\n        setHuntStatus(\"succeed\");\n      }\n      setTimeout(() => {\n        setModalName(true);\n      }, 30);\n    }, 2000);\n  };\n\n  const handleCancel = (param) => {\n    setModalName(false);\n    setHuntStatus(\"\");\n  };\n\n  const handleSetToCage = async () => {\n    setEmptPoke('')\n    if(!!newPoke.length){\n        let data = {\n            newName: newPoke,\n            image: pokemonDetail.image,\n            name: match.params.id,\n          };\n      \n          await dispatch(setToCage(data));\n          await history.push(\"/my-pokemon\");\n    }else{\n        setEmptPoke('Rename before you see the cage')\n    }\n   \n  };\n\n  return (\n    <Layout>\n      <Row>\n        <Title className=\"pd-20\" level={2}>\n          Pokemon Detail\n        </Title>\n      </Row>\n      <Row justify=\"center\">\n        <Col lg={4} xs={24}>\n          <Row style={{ flexFlow: \"column\" }} justify=\"center\" align=\"middle\">\n            <Avatar\n              style={{ backgroundColor: \"#fde3cf\" }}\n              size={200}\n              src={pokemonDetail.image}\n            />\n            <Button\n              style={{ marginTop: \"16px\" }}\n              type=\"primary\"\n              onClick={handleCatch}\n            >\n              CATCH NOW\n            </Button>\n          </Row>\n        </Col>\n        <Col className=\"pd-20\" lg={8}>\n          <Title level={3}>Info</Title>\n          <Row>\n            <Text>Name: {match.params.id} </Text>\n          </Row>\n          <Row>\n            <Text>\n              Types:{\" \"}\n              {pokemonDetail.types.map((type) => (\n                <span>{type.type.name} </span>\n              ))}{\" \"}\n            </Text>\n          </Row>\n          <Title style={{ marginTop: \"24px\" }} level={3}>\n            Moves\n          </Title>\n          {pokemonDetail.moves.map((move) => (\n            <Text>{move.move.name} </Text>\n          ))}\n        </Col>\n        {!!modalVideo && (\n          <Modal\n            closable={false}\n            onCancel=\"false\"\n            footer={false}\n            visible={modalVideo}\n          >\n            <Image src={catchGif} />\n          </Modal>\n        )}\n        {!!modalName && (\n          <Modal closable={false} footer={false} visible={modalName}>\n            {huntStatus === \"failed\" ? (\n              <React.Fragment>\n                <Image className=\"mlr-10\" src={pokeBallEmp} />\n                <Text className=\"mlr-10\">Try Again</Text>\n                <Button className=\"mlr-10\" onClick={handleCancel} type=\"danger\">\n                  Close\n                </Button>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                <Image src={pokeBall} />\n                {!!emptPoke.length ? <Text style={{color:'red'}}>{emptPoke}</Text>: <Text className=\"mg-10\">Awesome.., rename your Pokemon</Text>}\n                <Input\n                  className=\"mg-10\"\n                  value={newPoke}\n                  onChange={(e) => setNewPoke(e.target.value)}\n                />\n                \n                <Button\n                  className=\"mg-10\"\n                  onClick={handleSetToCage}\n                  type=\"primary\"\n                >\n                  See the cage\n                </Button>\n              </React.Fragment>\n            )}\n          </Modal>\n        )}\n      </Row>\n    </Layout>\n  );\n};\n\nexport default PokemonDetail;\n","import Home from '../pages/Home'\nimport MyPokemon from '../pages/MyPokemon'\nimport PageNotFound from '../pages/PageNotFound'\nimport PokemonDetail from '../pages/PokemonDetail'\n\nconst ROUTES = [\n    {\n        path: \"/\",\n        exact: true,\n        component: () => <Home />\n    },\n    {\n        path: \"/my-pokemon\",\n        exact: true,\n        component: () => <MyPokemon />\n    },\n    {\n        path: \"/pokemon/:id\",\n        exact: true,\n        component: () => <PokemonDetail />\n    }\n    // {\n    //     exact: false,\n    //     component: () => <PageNotFound />\n    // }\n];\n\nexport default ROUTES","import './App.css';\nimport ROUTES from './routes'\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n\n  const routePages = ROUTES.map(({ path, component, exact, key }) => <Route exact={exact} path={path} component={component} key={key} />)\n\n  return (\n    <BrowserRouter>\n      {routePages}\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import {TYPES} from '../../consts/actionType'\n\nconst  initialState = {\n    pokemonList : [],\n    pokemonDetail: {\n        moves: [],\n        types: [],\n        image: ''\n    },\n    myPokemons: null\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case TYPES.GET_POKEMON_LIST : \n            return {\n                ...state,\n                pokemonList: action.payload.results                  \n            }\n        case TYPES.GET_POKEMON_DETAIL: \n            return{\n                ...state,\n                pokemonDetail: {\n                    moves: action.payload.moves,\n                    types: action.payload.types,\n                    image: action.payload.sprites.front_default\n                }\n            }\n        case TYPES.GET_MY_POKEMON_LIST:\n            return{\n                ...state,\n                myPokemons: action.payload\n            }\n        default: \n            return state\n    }\n}\n","import {createStore, applyMiddleware, compose} from 'redux'\nimport rootReducer from './reducers/pokemonReducer'\nimport thunk from 'redux-thunk'\n\nconst middleware = [thunk]\n\nconst store = createStore(rootReducer, compose(applyMiddleware(...middleware)) )\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}